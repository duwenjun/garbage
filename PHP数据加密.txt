PHP中几种加密形式
Md5()加密算法
Crypt()加密算法
Shal()加密算法
URL编码加密技术
Base64编码加密技术

MD5加密算法
语法
string md5（string $str[, bool $raw_output = false]）
：计算str的MD5
散列值
$str:原始字符串
$raw_output:如果可选的raw_output被设置为true，那么MD5报文摘要将以16字节长度的原始
二进制格式返回。返回以32位字符十六禁止数字形式返回散列值
 md5(md5($str,true));

Crypt加密算法
语法：
string crypt(string $str[,string $salt]),
返回一个基于标准UNIX DES 算法或系统上其他可用的替代算法的散列字符串。
$str:需要加密的明文
$salt:加密时的干扰串，使编码更安全。
注意：
如果加密时没有加上这个$salt参数，将随机生成一个干扰串，否则刷新加密密文不变
echo crypt($str);
echo crypt($str,"im");

sha1加密算法
语法：
string shal(string $str[,bool $raw_output=false])
计算字符串的sha1散列值
$str:加密的字符串
$raw_output:如果可选的raw_output参数被设置为true，那么sha1就会将以20字符长度的原始格式返回，否则返回值是一个40字符长度的十六进制数字
返回sha1散列值加密字符串

前三个是单向不可逆加密

URL编码加密技术
1.urlencode(string $str):编码URL字符串
$str:要编码的字符串
返回值：返回编码后的字符串
编码规范：此字符串中除了-_.之外的所有非字母数字字符都将被替换成百分号(%)后跟两位16进制数，空格则编码为加号(+)
? %3F  ;= %3D ;空格 + ;% %25; & %26; \ %5c; + %2B;
可以用来解决参数中的& ； 百度就是用的urlencode();可以让地址栏参数变为密文
2.urldecode($string $str)：解码以编码的URL字符串
$str:要解码的字符串
返回值：返回解码后的字符串
 
3:rawurlencode(string $str)按照RFC1738对URL进行编码
$str ：要编码的URL
返回值：返回字符串，把空格编码为%20；这是和urlencode的唯一区别

4:rawurldecode(string $str):对以编码的URL字符串进行解码
$str：要解码的URL
返回值：返回字符串，此字符串中百分号%后根两位十六进制的序列都将被替换成原意字符。

Base64编码加密技术
1.base64_encode(string $data);使用base64对data进行编码
$data:要编码的数据
2.base64_decode(string $data[,bool $strict=false])对使用MIME base64编码的数据进行解码
$strict:如果输入的数据超过了base64字母表，则返回false
可以用来加密图片等。。。

信息加密技术分类总结：
1.单项散列加密
2.对称散列加密
3.非对称散列加密

单项散列加密技术介绍
	单向散列加密是指通过对不同输入长度的信息进行散列计算，得到固定长度的输出，这个散列计算过程是单向少的，即不能对固定长度的输出进行计算从而获得输入信息。
	  salt
明文-> 单向散列算法 -> 密文
对称加密技术介绍
	对称加密是指加密和解密使用的密钥是同一个密钥或者可以互相推算
明文->加密算法->密文―>解密算法->明文
非对称加密技术介绍
	非对称加密和解密使用的密钥不是用一个密钥，其中一个对外公开，被称做公钥，另一个只有所有者知道
	加密密钥	解密密钥
明文->加密算法->密文―>解密算法->明文